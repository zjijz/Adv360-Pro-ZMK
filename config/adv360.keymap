#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define DEFAULT 0
#define QWERTY  0
#define COLEMAK 0
#define SYMBOLS 1
#define CONTROL 2
#define MOD     3
#define MEDIA   4
#define FN      5

/ {
    behaviors {
        #include "macros.dtsi"
        #include "version.dtsi"
        #ifndef VERSION_MACRO
        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };
        #endif

        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };

        space_enter: space_enter {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp ENTER>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        mt2: mod_tap2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
            /* Ignore thumb keys. */
            hold-trigger-key-positions
                = <0>,  <1>,  <2>,  <3>,  <4>,  <5>,  <6>,              <7>,  <8>,  <9>,  <10>, <11>, <12>, <13>
                , <14>, <15>, <16>, <17>, <18>, <19>, <20>,             <21>, <22>, <23>, <24>, <25>, <26>, <27>
                , <28>, <29>, <30>, <31>, <32>, <33>, <34>,             <39>, <40>, <41>, <42>, <43>, <44>, <45>
                , <46>, <47>, <48>, <49>, <50>, <51>,                         <54>, <55>, <56>, <57>, <58>, <59>
                , <60>, <61>, <62>, <63>, <64>,             <66>, <69>,             <71>, <72>, <73>, <74>, <75>
                ;
        };

        lhypet: left_hyper_hold_toggle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&lhype>, <&tog>;
            /* Ignore thumb keys. */
            hold-trigger-key-positions
                = <0>,  <1>,  <2>,  <3>,  <4>,  <5>,  <6>,              <7>,  <8>,  <9>,  <10>, <11>, <12>, <13>
                , <14>, <15>, <16>, <17>, <18>, <19>, <20>,             <21>, <22>, <23>, <24>, <25>, <26>, <27>
                , <28>, <29>, <30>, <31>, <32>, <33>, <34>,             <39>, <40>, <41>, <42>, <43>, <44>, <45>
                , <46>, <47>, <48>, <49>, <50>, <51>,                         <54>, <55>, <56>, <57>, <58>, <59>
                , <60>, <61>, <62>, <63>, <64>,             <66>, <69>,             <71>, <72>, <73>, <74>, <75>
                ;
        };

        rhypet: right_hyper_hold_toggle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&rhype>, <&tog>;
            /* Ignore thumb keys. */
            hold-trigger-key-positions
                = <0>,  <1>,  <2>,  <3>,  <4>,  <5>,  <6>,              <7>,  <8>,  <9>,  <10>, <11>, <12>, <13>
                , <14>, <15>, <16>, <17>, <18>, <19>, <20>,             <21>, <22>, <23>, <24>, <25>, <26>, <27>
                , <28>, <29>, <30>, <31>, <32>, <33>, <34>,             <39>, <40>, <41>, <42>, <43>, <44>, <45>
                , <46>, <47>, <48>, <49>, <50>, <51>,                         <54>, <55>, <56>, <57>, <58>, <59>
                , <60>, <61>, <62>, <63>, <64>,             <66>, <69>,             <71>, <72>, <73>, <74>, <75>
                ;
        };
    };

    macros {
        msn_ctrl: mission_control {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp UP>
                , <&macro_release &kp LCTRL>
                ;
        };

        lhype: left_hyper {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_press &kp LCTRL>
                , <&macro_press &kp LALT>
                , <&macro_press &kp LGUI>
                , <&macro_pause_for_release>
                , <&macro_release &kp LSHFT>
                , <&macro_release &kp LCTRL>
                , <&macro_release &kp LALT>
                , <&macro_release &kp LGUI>
                ;
        };

        rhype: right_hyper {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RSHFT>
                , <&macro_press &kp RCTRL>
                , <&macro_press &kp RALT>
                , <&macro_press &kp RGUI>
                , <&macro_pause_for_release>
                , <&macro_release &kp RSHFT>
                , <&macro_release &kp RCTRL>
                , <&macro_release &kp RALT>
                , <&macro_release &kp RGUI>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp CAPS   &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &to DEFAULT                                                                                                    &tog MOD  &kp N6 &kp N7 &kp N8    &kp N9   &kp N0   &kp SLCK
                &kp ESC    &kp Q     &kp G    &kp M    &kp L      &kp W  &to COLEMAK                                                                                                    &none     &kp Y  &kp F  &kp U     &kp B    &kp FSLH &kp BSLH
                &kp GRAVE  &kp D     &kp S    &kp T    &kp N      &kp R  &to QWERTY                &lhypet 0 SYMBOLS &mt2 LCTRL LT  &mt2 RCTRL GT  &rhypet 0 CONTROL                    &kp MINUS &kp I  &kp A  &kp E     &kp O    &kp H    &kp EQUAL
                &kp TAB    &kp Z     &kp X    &kp C    &kp V      &kp J                                              &mt2 LALT LBKT &mt2 RALT RBKT                                                &kp K  &kp P  &kp COMMA &kp DOT  &kp SEMI &kp SQT
                &tog MEDIA &none     &none    &kp LEFT &kp RIGHT                    &mt2 LSHFT LPAR &bspc_del        &mt2 LGUI LBRC &mt2 RGUI RBRC &space_enter      &mt2 RSHFT RPAR                     &kp UP &kp DOWN  &none    &none    &tog FN
            >;
        };
        /* TODO: QWERTY */
        /* TODO: Colemak */
        symbols {
            bindings = <
                &kp CAPS   &kp N1    &kp N2   &kp N3   &kp N4     &kp N5    &to DEFAULT                                                                                              &tog MOD  &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp SLCK
                &kp ESC    &none     &none    &none    &none      &none     &to COLEMAK                                                                                              &none     &none     &none     &none     &none     &kp FSLH  &kp BSLH
                &kp GRAVE  &kp EXCL  &kp AT   &kp HASH &kp DLLR   &kp PRCNT &to QWERTY             &lhypet 0 SYMBOLS &mt2 LCTRL LT  &mt2 RCTRL GT  &rhypet 0 CONTROL                 &kp MINUS &kp CARET &kp AMPS  &kp STAR  &kp MINUS &kp EQUAL &kp EQUAL
                &kp TAB    &none     &none    &none    &none      &none                                              &mt2 LALT LBKT &mt2 RALT RBKT                                             &none     &none     &kp COMMA &kp DOT   &kp SEMI  &kp SQT
                &tog MEDIA &none     &none    &kp LEFT &kp RIGHT                    &mt2 LSHFT LPAR &bspc_del        &mt2 LGUI LBRC &mt2 RGUI RBRC &space_enter      &mt2 RSHFT RPAR                     &kp UP    &kp DOWN  &none     &none     &tog FN
            >;
        };
        control {
            bindings = <
                &none      &none         &none         &none            &none             &none &to DEFAULT                                                                                 &tog MOD      &none         &none          &none            &none         &none         &none
                &none      &kp LC(LA(Q)) &kp LC(LA(W)) &kp LC(LA(E))    &none             &none &to COLEMAK                                                                                 &none         &none         &none          &none            &none         &none         &none
                &none      &kp LC(LA(A)) &kp LC(LA(S)) &kp LC(LA(D))    &none             &none &to QWERTY                   &lhypet 0 SYMBOLS  &kp LCTRL &kp RCTRL &rhypet 0 CONTROL       &kp LC(LA(N)) &kp LC(LA(M)) &kp LC(LA(H))  &kp LC(LA(J))    &kp LC(LA(K)) &kp LC(LA(L)) &none
                &none      &kp LC(LA(Z)) &kp LC(LA(X)) &kp LC(LA(C))    &none             &none                                                 &kp LALT  &kp RALT                                        &none         &none          &none            &none         &none         &none
                &tog MEDIA &kp HOME      &kp END       &kp LC(LA(LEFT)) &kp LC(LA(RIGHT))                         &kp LSHIFT &kp LC(LA(SPACE))  &kp LGUI  &kp RGUI  &kp LC(LA(ENTER)) &kp RSHFT                         &kp LC(LA(UP)) &kp LC(LA(DOWN)) &kp PG_UP     &kp PG_DN     &tog FN
            >;
        };
        mod {
            bindings = <
                &none      &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &to DEFAULT                                                                         &tog MOD               &none &none      &none      &none &none &none
                &none      &none        &none        &none        &none        &none        &bootloader                                                                         &bootloader            &none &none      &none      &none &none &none
                &none      &none        &none        &none        &none        &none        &none               &tog SYMBOLS &none &bt BT_CLR &tog CONTROL                      &rgb_ug RGB_MEFS_CMD 5 &none &none      &none      &none &none &none
                &none      &none        &none        &none        &macro_ver   &none                                         &none &none                                                               &none &none      &none      &none &none &none
                &tog MEDIA &none        &none        &none        &none                                   &none &none        &none &none      &bl BL_TOG   &rgb_ug RGB_TOG                                   &bl BL_INC &bl BL_DEC &none &none &tog FN
            >;
        };
        media {
            bindings = <
                &kp C_BRI_DN &kp C_BRI_UP  &msn_ctrl &bl BL_INC &bl BL_DEC &kp F16 &trans                                           &trans &kp C_PREV  &kp C_PP &kp C_NEXT &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP
                &trans       &trans        &trans    &trans     &trans     &trans  &trans                                           &trans &trans      &trans   &trans     &trans     &trans       &trans
                &trans       &trans        &trans    &trans     &trans     &trans  &trans        &trans &trans &trans &trans        &trans &trans      &trans   &trans     &trans     &trans       &trans
                &trans       &trans        &trans    &trans     &trans     &trans                       &trans &trans                      &trans      &trans   &trans     &trans     &trans       &trans
                &trans       &trans        &trans    &trans     &trans                    &trans &trans &trans &trans &trans &trans                    &trans   &trans     &trans     &trans       &trans
            >;
        };
        fn {
            bindings = <
                &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &trans                                           &trans &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
                &trans &trans &trans &trans &trans &trans &trans                                           &trans &trans &trans &trans &trans  &trans  &trans
                &trans &trans &trans &trans &trans &trans &trans        &trans &trans &trans &trans        &trans &trans &trans &trans &trans  &trans  &trans
                &trans &trans &trans &trans &trans &trans                      &trans &trans                      &trans &trans &trans &trans  &trans  &trans
                &trans &trans &trans &trans &trans               &trans &trans &trans &trans &trans &trans               &trans &trans &trans  &trans  &trans
            >;
        };
    };
};
